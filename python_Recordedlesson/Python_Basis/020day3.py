"""
列表的基本使用
一、列表（list类型）
1、在python是用中括号表示（和其他语言中的数组看起来差不多）
2、例子：[11,22,33，‘python’]
3、列表中可以存储任何类型的数据
4、空字符串   s1=‘’   <class 'str'>
5、空列表     li = []      <class 'list'>
6、列表和字符串（后续会讲的元组，有一个公共操作）：切片和索引取值
"""
li = [11, 1.3, True, '788', [11, 22]]
print(li)
s1 = ''
li = []
print(type(s1), type(li))
'''
二、索引（下标）
1、列表里的每个数据是用“逗号”隔开的
2、下标也是从“0”开始的
3、正向索引：从前往后数，从0开始
4、反向索引：从后往前数，从-1开始（全是负数）
'''
# 三、索引取值：通过下标的值，获取指定位置的数据
'''
1、（正向索引）字符串使用下标“1”，取到的值为2
2、（正向索引）列表使用下标为“1”，取到的值为22
3、（反向索引）字符串使用下标“-3”，取值为2
4、（反向索引）字符串使用下标“-3”，取值为333
'''
s = "12345"
print(s[-3])
l1 = [111, 223, 333, 444, 5555]
print(l1[-3])

# 四、切片：通过下标，获取多个值
'''
1、“冒号”前后都不写，默认是最开始和最末尾，会把所有数据打印出
2、“冒号”前写“1”，默认从下标为1的数据开始，取到末尾
3、[a：b]：切片操作是左闭右开 ==>数学中范围表示[a，b）
4、切片也可以使用反向下标取值（建议：要么都正向、要么都反向）
'''
l2 = ['hello', 20210204, 'i like python']
print(l2[:])
print(l2[1:])
print(l2[1:2])
print(l2[1:-1])
# 五、切片的步长
'''
1、格式：[a：b：c]  ===>  [起始位置：终止位置：步长]
2、将起始和终止之间的数据“345678”，按照步长2划分区域“34 56 78”，每个区域取第一个“357”
'''
l3 = "123456789"
res = l3[2:8:2]
print(res)
# 六、反向步长切片
'''
1、反向步长时，起始和终止如果无法形成闭区间，无法取到值
2、默认“起始”是末尾，“终止”是开始，结果是闭区间，可以取到值
3、反向步长是从后往前进行切片
4、起始位置和终止位置：起始位置 > 终止位置
5、使用步长3，分块“987 65”，取值“96”
'''
l4 = "123456789"
print(F"我是方向取{l4[8:2:-1]}")
print(f"我的方向步长是3奥！{l4[8:3:-3]}")

